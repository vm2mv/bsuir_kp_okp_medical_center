#pragma once

enum class LanguageString : uint32_t
{
	Welcom,
	UnknowError,
	CantOpenUsersDatabase,
	LoginFailed,
	LoginSuccess,
	LoginedUserIsAdmin,
	QuestionRepeatEnterYesNo,
	QuestionContinueYesNo,
	PatientsDatabaseDefaultHasOpenend,
	PatientsDatabaseDefaultHasCreatedAndOpenend,
	CantOpenPatientsDatabase,
	AdminNotFoundInUsersDatabase,
	QuestionCreateFirstAdmin,
	CreateNewUsersDatabaseInfo,
	CreateAdminInNewUsersDatabaseInfo,
	UsersDatabaseCreated,
	AdminCreatedInUsersDatabase,
	NewUserFormCaption,
	PasswordsNotEq,
	IncorrectValue,
	EmptyValueNotAllowed,
	UserFormName,
	UserFormPassword,
	UserFormConfirmPassword,
	LoginName,
	LoginPasword,
	PatientFormName,
	PatientFormGender,
	PatientFormBirthDate,
	PatientFormCity,
	PatientFormPhone,
	PatientFormDiagnoses,
	EnterPathToPatientsDatabase,
	PatientsDatabaseFileNotFound,
	CantCheckExistPatientsDatabase,
	MenuSelectItem,
	MenuReturnToParent,
	MenuExit,
	MenuControlUsers,
	MenuControlPatientsDatabasesFiles,
	MenuControlData,
	MenuEditPatientsData,
	MenuProcessPatientsData,
	MenuViewNonresidentPatients,
	MenuViewPatientsByAgeAndDiagnose,
	MenuSearchPatients,
	MenuOrderPatients,
	MenuSearchPatientsByName,
	MenuSearchPatientsByCity,
	MenuSearchPatientsByDiagnose,
	MenuSearchPatientsByPhone,
	MenuOrderPatientsByName,
	MenuOrderPatientsByCity,
	MenuOrderPatientsByBirthDate,
	MenuViewAllPatients,
	MenuAddPatient,
	MenuEditPatient,
	MenuRemovePatient,
	MenuPatientsFileCreateFile,
	MenuPatientsFileOpen,
	MenuPatientsCloseFile,
	MenuPatientsRemoveFile,
	MenuViewAllUsers,
	MenuAddNewUser,
	MenuEditUser,
	MenuRemoveUser,
	FoundRecords,
	NotFoundAnyRecord,
	UserID,
	UserName,
	UserRole,
	UserRoleIsAdmin,
	UserRoleIsUser,
	CreateNewUserAsAdmin,
	UserLoginExistAlready,
	UsersAdded,
	CantAddUser,
	RemoveUserConfirm,
	UserRemoved,
	CantRemoveUser,
	EnterUserId,
	UserIdNotFound,
	UserFound,
	EditUserConfirm,
	EditUserChangeRole,
	EditUserAsAdmin,
	EditUserChangeName,
	EditUserNewName,
	EditUserChangePassword,
	EditUserNewPassword,
	EditUserNewPasswordConfirm,
	UserChanged,
	CantChangeUser,
	PatientId,
	PatientName,
	PatientGender,
	PatientBirthDate,
	PatientCity,
	PatientPhone,
	PatientDiagnoses,
	GenderMale,
	GenderFeemale,
	GenderShemale,
	PatientAdded,
	PatientEditConfirm,
	PatientChanged,
	CantChangePatient,
	PatientRemoveConfirm,
	PatientRemoved,
	CantRemovePatient,
	SearchPatientName,
	SearchPatientCity,
	SearchPatientDiagnose,
	SearchPatientPhone,
	SearchPatientAge,
	EnterPatientId,
	PatientIdNotFound,
	PatientFound,
	PatientsFileExistAlready,
	PatientsFileCreated,
	PatientsFileOpened,
	PatientsFileClosed,
	RemoveFileConfirm,
	CantRemoveOpenedPatientsFile,
	PatientsFileRemoved,
	CantRemovePatientsFile,
	NotFoundOpenedPatientsFile,
};


class Language
{
	using LanguageStringsMap_t = std::unordered_map<LanguageString, std::string>;

	static const LanguageStringsMap_t DEFAULT_LANGUAGE_STRINGS;

public:
	Language();

	const char* GetString(const LanguageString languageStringId) const;

private:
	LanguageStringsMap_t m_strings;
};

